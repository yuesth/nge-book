{"version":3,"sources":["App.js","index.js","provider/index.js","config.js"],"names":["LazyLogin","lazy","LazyHome","LazyLibrary","PrivateRoute","path","element","currentUser","useBookContext","location","useLocation","to","state","from","App","contract","value","nearConfig","wallet","basename","window","pathname","fallback","a","getConfig","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","amount","accountId","balance","contractName","viewMethods","changeMethods","sender","nearInitPromise","initContract","then","ReactDOM","render","document","getElementById","BookContext","createContext","useContext","BookContextProvider","children","Provider","CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error"],"mappings":"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","file":"static/js/main.a2c631bc.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react'\nimport { HashRouter, Navigate, Routes, Route, useLocation, Outlet } from 'react-router-dom'\nimport { BookContextProvider, useBookContext } from './provider/index'\nconst LazyLogin = lazy(() => import('./pages/login'))\nconst LazyHome = lazy(() => import('./pages/home'))\nconst LazyLibrary = lazy(() => import('./pages/library'))\n\n\nfunction App({ contract, currentUser, nearConfig, wallet }) {\n  const value = { contract, nearConfig, currentUser, wallet };\n  return (\n    <BookContextProvider value={value}>\n      <HashRouter basename={window.location.pathname || ''}>\n        <Suspense fallback={<></>}>\n          <Routes>\n            <Route path=\"/login\" element={<LazyLogin />}></Route>\n            <Route path=\"/library\" element={<PrivateRoute />}>\n              <Route path=\"/library\" element={<LazyLibrary />}></Route>\n            </Route>\n            <Route path=\"/\" element={<PrivateRoute />}>\n              <Route path=\"/\" element={<LazyHome />} />\n            </Route>\n          </Routes>\n        </Suspense>\n      </HashRouter>\n    </BookContextProvider>\n  );\n}\n\nconst PrivateRoute = ({ path, element }) => {\n  let { currentUser } = useBookContext();\n  let location = useLocation();\n  if (!currentUser) {\n    return (\n      <Navigate to=\"/login\" state={{ from: location }} />\n    )\n  }\n  else {\n    return (\n      <Outlet />\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as nearAPI from 'near-api-js';\nimport getConfig from './config'\n// import reportWebVitals from './reportWebVitals';\n\nasync function initContract() {\n  const nearConfig = getConfig('development');\n  // Initializing connection to the NEAR TestNet\n  const near = await nearAPI.connect({\n    deps: {\n      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n    },\n    ...nearConfig,\n  });\n\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    walletConnection.account(),\n    nearConfig.contractName,\n    {\n      // View methods are read-only â€“ they don't modify the state, but usually return some value\n      viewMethods: ['get_book', 'get_books'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['add_book', 'update_book', 'delete_book'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.account(),\n    }\n  );\n\n  return { contract, currentUser, nearConfig, walletConnection };\n}\n\nwindow.nearInitPromise = initContract().then(({ contract, currentUser, nearConfig, walletConnection }) => {\n  ReactDOM.render(\n    // <React.StrictMode>\n    <App\n      contract={contract}\n      currentUser={currentUser}\n      nearConfig={nearConfig}\n      wallet={walletConnection}\n    />,\n    // {/* </React.StrictMode>, */ }\n    document.getElementById('root')\n  );\n})\n\n// reportWebVitals();\n","import React, { useContext, createContext } from 'react'\n\nconst BookContext = createContext()\n\nexport function useBookContext() {\n    return useContext(BookContext)\n}\nexport function BookContextProvider({ children, value }) {\n    return (\n        <BookContext.Provider value={value}>{children}</BookContext.Provider>\n    )\n}\n\n","const CONTRACT_NAME = process.env.CONTRACT_NAME || 'yueshafiyan.testnet';\n\nfunction getConfig(env) {\n  switch (env) {\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org',\n      };\n    // This is an example app so production is set to testnet.\n    // You can move production to mainnet if that is applicable.\n    case 'production':\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org',\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org',\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME,\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near',\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near',\n      };\n    default:\n      throw Error(\n        `Unconfigured environment '${env}'. Can be configured in src/config.js.`\n      );\n  }\n}\n\nmodule.exports = getConfig;"],"sourceRoot":""}